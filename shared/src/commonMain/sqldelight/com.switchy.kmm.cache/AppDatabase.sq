import kotlin.Long;

-- HOUSE POWER TABLES
createHousePowerUsageTableIfNeeded:
CREATE TABLE IF NOT EXISTS DBHousePowerUsage (
  houseId TEXT NOT NULL,
  deviceId TEXT NOT NULL,
  epochSeconds INTEGER AS Long NOT NULL,
  power REAL NOT NULL DEFAULT 0,
  PRIMARY KEY (houseId, deviceId, epochSeconds)
);

insertHousePowerUsage:
INSERT OR REPLACE INTO DBHousePowerUsage VALUES ?;

getHousePowerUsage:
SELECT * FROM DBHousePowerUsage
WHERE :houseId = houseId AND :deviceId = deviceId
AND (:from = NULL OR epochSeconds >= :from)
AND (:to = NULL OR epochSeconds <= :to)
ORDER BY epochSeconds ASC
;

removeHousePowerUsage:
DELETE FROM DBHousePowerUsage
WHERE :houseId = houseId AND :deviceId = deviceId
AND epochSeconds BETWEEN :from AND :to
;

removeAllHousePowerUsage:
DELETE FROM DBHousePowerUsage;


-- HOUSE ENERGY TABLES
createHouseEnergyUsageTableIfNeeded:
CREATE TABLE IF NOT EXISTS DBHouseEnergyUsage (
  houseId TEXT NOT NULL,
  deviceId TEXT NOT NULL,
  epochSeconds INTEGER AS Long NOT NULL,
  energy REAL NOT NULL DEFAULT 0,
  PRIMARY KEY (houseId, deviceId, epochSeconds)
);

insertHouseEnergyUsage:
INSERT OR REPLACE INTO DBHouseEnergyUsage VALUES ?;

getHouseEnergyUsage:
SELECT * FROM DBHouseEnergyUsage
WHERE :houseId = houseId AND :deviceId = deviceId
AND (:from = NULL OR epochSeconds >= :from)
AND (:to = NULL OR epochSeconds <= :to)
ORDER BY epochSeconds ASC
;

removeHouseEnergyUsage:
DELETE FROM DBHouseEnergyUsage
WHERE :houseId = houseId AND :deviceId = deviceId
AND epochSeconds BETWEEN :from AND :to
;

removeAllHouseEnergyUsage:
DELETE FROM DBHouseEnergyUsage;

--SYNC STATUS TABLES
createSyncStatusTableIfNeeded:
CREATE TABLE IF NOT EXISTS DBSyncStatus(
houseId TEXT NOT NULL,
deviceId TEXT NOT NULL,
tableName TEXT NOT NULL,
mostRecentTime INTEGER AS Long NOT NULL,
leastRecentTime INTEGER AS Long NOT NULL,
startTime INTEGER AS Long,
PRIMARY KEY (houseId, deviceId, tableName)
);

insertSyncStatus:
INSERT OR REPLACE INTO DBSyncStatus
VALUES ?;

getSyncStatus:
SELECT * FROM DBSyncStatus
WHERE :houseId = houseId AND :deviceId = deviceId
AND (:tableName = NULL OR :tableName = tableName);

removeSyncStatus:
DELETE FROM DBSyncStatus
WHERE :houseId = houseId AND :deviceId = deviceId
AND (:tableName = NULL OR :tableName = tableName);

removeAllSyncStatus:
DELETE FROM DBSyncStatus;